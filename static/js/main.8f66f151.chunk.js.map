{"version":3,"sources":["Image/signin.svg","Image/signup.svg","component/Authentication.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Authentication","className","type","placeholder","value","to","color","size","id","onClick","sign_up_btn","document","querySelector","container","addEventListener","classList","add","src","signup","alt","sign_in_btn","remove","signin","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8f66f151.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/signin.342519a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/signup.2bbcda1a.svg\";","import React from 'react';\r\nimport \"./Authentication.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiFillFacebook, AiFillTwitterSquare, AiFillGoogleSquare, AiFillLinkedin } from \"react-icons/ai\";\r\nimport signin from \"../Image/signin.svg\";\r\nimport signup from \"../Image/signup.svg\";\r\n\r\nexport default function Authentication() {\r\n\r\n    function changeside1() {\r\n        // const sign_in_btn = document.querySelector(\"#sign-in-btn\");\r\n        const sign_up_btn = document.querySelector(\"#sign-up-btn\");\r\n        const container = document.querySelector(\".container\");\r\n\r\n        sign_up_btn.addEventListener(\"click\", () => {\r\n            container.classList.add(\"sign-up-mode\");\r\n        });\r\n\r\n        // sign_in_btn.addEventListener(\"click\", () => {\r\n        //     container.classList.remove(\"sign-up-mode\");\r\n        // });\r\n\r\n\r\n    }\r\n    function changeside2() {\r\n        const sign_in_btn = document.querySelector(\"#sign-in-btn\");\r\n        // const sign_up_btn = document.querySelector(\"#sign-up-btn\");\r\n        const container = document.querySelector(\".container\");\r\n\r\n        // sign_up_btn.addEventListener(\"click\", () => {\r\n        //     container.classList.add(\"sign-up-mode\");\r\n        // });\r\n\r\n        sign_in_btn.addEventListener(\"click\", () => {\r\n            container.classList.remove(\"sign-up-mode\");\r\n        });\r\n\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"forms-container\">\r\n                <div className=\"signin-signup\">\r\n                    <div className=\"form sign-in-form\">\r\n                        <h2 className=\"title\">Sign In</h2>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"material-icons\">person</i>\r\n                            <input type=\"text\" placeholder=\"Username\" />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"material-icons\">lock</i>\r\n                            <input type=\"password\" placeholder=\"Password\" />\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Login\" className=\"btn solid\" />\r\n                        <p className=\"social-text\">Or Sign in with social platforms</p>\r\n                        <div className=\"social-media\">\r\n                            <Link to=\"#\" className=\"social-icon\">\r\n                                <AiFillFacebook color=\"blue\" size=\"35px\" />\r\n                            </Link>\r\n                            <Link to=\"#\" className=\"social-icon\">\r\n                                <AiFillTwitterSquare color=\"blue\" size=\"35px\" />\r\n                            </Link>\r\n                            <Link to=\"#\" className=\"social-icon\">\r\n                                <AiFillGoogleSquare color=\"blue\" size=\"35px\" />\r\n                            </Link>\r\n                            <Link to=\"#\" className=\"social-icon\">\r\n                                <AiFillLinkedin color=\"blue\" size=\"35px\" />\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form sign-up-form\">\r\n                        <h2 className=\"title\">Sign Up</h2>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"material-icons\">person</i>\r\n                            <input type=\"text\" placeholder=\"Username\" />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"material-icons\">markunread</i>\r\n                            <input type=\"text\" placeholder=\"Email\" />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"material-icons\">lock</i>\r\n                            <input type=\"password\" placeholder=\"Password\" />\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Sign Up\" className=\"btn solid\" />\r\n                        <p className=\"social-text\">Or Sign Up with social platforms</p>\r\n                        <div className=\"social-media\">\r\n                            <Link to=\"#\" className=\"social-icon\">\r\n                                <AiFillFacebook color=\"blue\" size=\"35px\" />\r\n                            </Link>\r\n                            <Link to=\"#\" className=\"social-icon\">\r\n                                <AiFillTwitterSquare color=\"blue\" size=\"35px\" />\r\n                            </Link>\r\n                            <Link to=\"#\" className=\"social-icon\">\r\n                                <AiFillGoogleSquare color=\"blue\" size=\"35px\" />\r\n                            </Link>\r\n                            <Link to=\"#\" className=\"social-icon\">\r\n                                <AiFillLinkedin color=\"blue\" size=\"35px\" />\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"panels-container\">\r\n                <div className=\"panel left-panel\">\r\n                    <div className=\"content\">\r\n                        <h3>New here ?</h3>\r\n                        <p>\r\n                            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Debitis,\r\n                            ex ratione. Aliquid!\r\n              </p>\r\n                        <button className=\"btn transparent\" id=\"sign-up-btn\" onClick={changeside1}>\r\n                            Sign up\r\n              </button>\r\n                    </div>\r\n                    <img src={signup} className=\"image\" alt=\"\" />\r\n\r\n                </div>\r\n                <div className=\"panel right-panel\">\r\n                    <div className=\"content\">\r\n                        <h3>One of us ?</h3>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum\r\n                            laboriosam ad deleniti.\r\n              </p>\r\n                        <button className=\"btn transparent\" id=\"sign-in-btn\" onClick={changeside2} >\r\n                            Sign in\r\n              </button>\r\n                    </div>\r\n                    <img src={signin} className=\"image\" alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from 'react';\n\nimport './App.css';\nimport Authentication from './component/Authentication';\n\nfunction App() {\n  return (\n    <Authentication />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}